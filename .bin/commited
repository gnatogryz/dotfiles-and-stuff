#!/usr/bin/env ruby

require 'io/console'

class String
	# colorization
	def colorize(color_code)
	  "\e[#{color_code}m#{self}\e[0m"
	end

	def red
	  colorize(31)
	end

	def green
	  colorize(32)
	end

	def yellow
	  colorize(33)
	end

	def blue
	  colorize(34)
	end

	def pink
	  colorize(35)
	end

	def light_blue
	  colorize(36)
	end
  end


(puts 'fix | feat | chore | ci | docs | style | refactor | test | perf'.light_blue; return) if ARGV.length < 1

arg, *scope = ARGV
arg ||= 'fix'
scope = "(#{scope.join('-')})" if scope.length > 0
arg = [arg, scope].join('')
arg += ': ' if arg.length > 0

res = ''

begin
	print "Summary ".light_blue + "(#{arg.strip.gsub(':', '')}): ".blue
	res = STDIN.gets.strip

	return if res.length == 0

	print 'Description: '.light_blue
	body = STDIN.gets.strip
	res += "\n\n#{body}" if body.length > 0
	print 'Footer (breaking change): '.light_blue
	foot = STDIN.gets.strip
	res += "\n\nBREAKING CHANGE: #{foot}" if foot.length > 0
	arg.gsub!(':', '!:') if foot.length > 0
rescue Interrupt
	puts "\naborted".yellow
	return
end

push = false
loop do
	case $stdin.getch
		when "\r"
			push = true
			break
		else
			push = false
			break
	end
end

puts push

return if (res.length == 0)

run = %Q(git commit -am "#{(arg+res).gsub('"', '\"')}")
puts " â†³ #{run}\n".gsub("\n", "\n   ").blue
system run
